// src/components/TicketSelection/TicketSelection.jsx
import PropTypes from "prop-types";
import styles from "./TicketSelection.module.css";

const TicketSelection = ({ onSelect }) => {
  const tickets = [
    {
      id: 1,
      name: "–ü—Ä–æ—Å—Ç–æ–π",
      price: 100,
      chance: "1 –∫ 10",
      color: "#4CAF50",
      description: "–ë–∞–∑–æ–≤—ã–π –±–∏–ª–µ—Ç –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö –∏–≥—Ä–æ–∫–æ–≤",
      icon: "üé´",
    },
    {
      id: 2,
      name: "–ó–æ–ª–æ—Ç–æ–π",
      price: 300,
      chance: "1 –∫ 5",
      color: "#FFC107",
      description: "–£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–µ —à–∞–Ω—Å—ã –Ω–∞ –ø–æ–±–µ–¥—É",
      icon: "‚ú®",
    },
    {
      id: 3,
      name: "–ü–ª–∞—Ç–∏–Ω–æ–≤—ã–π",
      price: 500,
      chance: "1 –∫ 3",
      color: "#9C27B0",
      description: "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ —à–∞–Ω—Å—ã –Ω–∞ –∫—Ä—É–ø–Ω—ã–π –≤—ã–∏–≥—Ä—ã—à",
      icon: "üíé",
    },
  ];

  const handleSelect = (ticket) => {
    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–∞–∫—Ç–∏–ª—å–Ω—ã–π –æ—Ç–∫–ª–∏–∫
    window.Telegram.WebApp.HapticFeedback.impactOccurred("medium");

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    window.Telegram.WebApp.showPopup(
      {
        title: "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ",
        message: `–í—ã –≤—ã–±—Ä–∞–ª–∏ "${ticket.name}" –±–∏–ª–µ—Ç –∑–∞ ${ticket.price}$. –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–æ–∫—É–ø–∫—É?`,
        buttons: [
          {
            type: "ok",
            text: "–ö—É–ø–∏—Ç—å",
            id: "buy",
          },
          {
            type: "cancel",
            text: "–û—Ç–º–µ–Ω–∞",
          },
        ],
      },
      (buttonId) => {
        if (buttonId === "buy") {
          window.Telegram.WebApp.HapticFeedback.notificationOccurred("success");
          onSelect(ticket);
        }
      }
    );
  };

  return (
    <div className={styles.container}>
      <div className={styles.header}>
        <h2 className={styles.title}>–í—ã–±–µ—Ä–∏—Ç–µ –±–∏–ª–µ—Ç</h2>
        <p className={styles.subtitle}>
          –ß–µ–º –¥–æ—Ä–æ–∂–µ –±–∏–ª–µ—Ç, —Ç–µ–º –≤—ã—à–µ —à–∞–Ω—Å –≤—ã–∏–≥—Ä—ã—à–∞
        </p>
      </div>

      <div className={styles.ticketList}>
        {tickets.map((ticket) => (
          <div
            key={ticket.id}
            className={styles.ticketCard}
            onClick={() => handleSelect(ticket)}
            style={{ "--ticket-color": ticket.color }}
          >
            <div className={styles.ticketIcon}>{ticket.icon}</div>

            <div className={styles.ticketContent}>
              <div className={styles.ticketHeader}>
                <span className={styles.ticketName}>{ticket.name}</span>
                <span className={styles.ticketPrice}>{ticket.price} $</span>
              </div>

              <p className={styles.ticketDescription}>{ticket.description}</p>

              <div className={styles.ticketInfo}>
                <div className={styles.chanceInfo}>
                  <span className={styles.chanceLabel}>–®–∞–Ω—Å –≤—ã–∏–≥—Ä—ã—à–∞:</span>
                  <span className={styles.chanceValue}>{ticket.chance}</span>
                </div>
                <button className={styles.buyButton}>–ö—É–ø–∏—Ç—å –±–∏–ª–µ—Ç</button>
              </div>
            </div>

            <div className={styles.shine}></div>
          </div>
        ))}
      </div>
    </div>
  );
};

TicketSelection.propTypes = {
  onSelect: PropTypes.func.isRequired,
};

export default TicketSelection;
